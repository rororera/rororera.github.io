<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Oracle试题3</title>
    <link href="/2020/07/16/Oracle%E8%AF%95%E9%A2%983/"/>
    <url>/2020/07/16/Oracle%E8%AF%95%E9%A2%983/</url>
    
    <content type="html"><![CDATA[<ol><li><p>查询emp和dept表,产生笛卡尔积(多表行相乘)<br><code>select emp.*,dept.* from emp,dept</code></p></li><li><p>加where条件过滤查询emp和dept表产生的笛卡尔积<br><code>select emp.*,dept.* from emp,dept where emp.deptno = dept.deptno</code></p></li><li><p>查询emp和dept表,产生笛卡尔积(多表行相乘),并为表取别名<br><code>select t1.*,t2.* from emp t1,dept t2</code></p></li><li><p>查询雇员姓名,所在部门编号和名称<br><code>select emp.ename,emp.deptno,dept.dname from emp,dept where emp.deptno = dept.deptno</code></p></li><li><p>查询所有雇员姓名,工作,领导的姓名<br><code>select t1.ename,t1.job,t2.ename from emp t1,emp t2 where t1.mgr = t2.empno(+)</code></p></li><li><p>查询雇员姓名,工作,领导姓名及部门名称<br><code>select t1.ename,t1.job,t2.ename,dname from emp t1,emp t2,dept where t1.mgr = t2.empno(+) and t1.deptno=dept .deptno</code></p></li><li><p>查询雇员姓名,工作,工资及工资等级<br><code>select ename,job,sal,grade from emp,salgrade where sal between losal and hisal</code></p></li><li><p>查询雇员姓名,工作,工资及工资等级,要求工资等级显示为A B C D E<br><code>select ename,job,sal,decode(grade,1,&#39;A&#39;,2,&#39;B&#39;,3,&#39;C&#39;,4,&#39;D&#39;,5,&#39;E&#39;) from emp,salgrade where sal between losal and hisal</code></p></li><li><p>查询雇员姓名,年薪（薪水+奖金）,按年薪从高到低排序<br><code>select ename,(sal+nvl(comm,0))*12 from emp order by nvl((sal+nvl(comm,0))*12,0) desc</code></p></li><li><p>查询每个部门中工资最高的雇员姓名,工作,工资,部门名称,最后按工资从高到低排序，工资相同的情况下按姓名排升序</p><pre><code class="hljs routeros">select ename,job,sal,dname <span class="hljs-keyword">from</span> emp t1,dept t2,(select max(sal) maxsal <span class="hljs-keyword">from</span> emp t1,dept t2 where t1.<span class="hljs-attribute">deptno</span>=t2.deptno<span class="hljs-built_in"> group </span>by t1.deptno ) t3 where t1.<span class="hljs-attribute">deptno</span>=t2.deptno <span class="hljs-keyword">and</span> t1.<span class="hljs-attribute">sal</span>=t3.maxsal order by sal desc,ename</code></pre></li><li><p>查询每个部门的部门编号和雇员数量</p><pre><code class="hljs routeros">select dept.deptno,nvl(emp.empnum,0)<span class="hljs-keyword">from</span> dept,(select count(empno) empnum,deptno <span class="hljs-keyword">from</span> emp<span class="hljs-built_in"> group </span>by deptno) empwhere dept.<span class="hljs-attribute">deptno</span>=emp.deptno(+)</code></pre></li><li><p>出每个部门的部门名和平均工资(保留2位小数，截断)</p><pre><code class="hljs routeros">select dname,nvl(emp.avgsal,0)<span class="hljs-keyword">from</span> dept,(select trunc(avg(sal),2) avgsal,deptno <span class="hljs-keyword">from</span> emp<span class="hljs-built_in"> group </span>by deptno) empwhere dept.<span class="hljs-attribute">deptno</span>=emp.deptno(+)</code></pre></li><li><p>按部门分组，并显示部门的名称，以及每个部门的员工数</p><pre><code class="hljs routeros">select dname,nvl(emp.empnum,0)<span class="hljs-keyword">from</span> dept,(select count(empno) empnum,deptno <span class="hljs-keyword">from</span> emp<span class="hljs-built_in"> group </span>by deptno) empwhere dept.<span class="hljs-attribute">deptno</span>=emp.deptno(+)</code></pre></li><li><p>要求显示平均工资大于2000的部门编号和平均工资(保留2位小数，截断)</p><pre><code class="hljs routeros">select dept.deptno,emp.avgsal<span class="hljs-keyword">from</span> dept,(select trunc(avg(sal),2) avgsal,deptno <span class="hljs-keyword">from</span> emp<span class="hljs-built_in"> group </span>by deptno) empwhere dept.<span class="hljs-attribute">deptno</span>=emp.deptno <span class="hljs-keyword">and</span> emp.avgsal&gt;2000</code></pre></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Oracle试题2</title>
    <link href="/2020/07/16/Oracle%E8%AF%95%E9%A2%982/"/>
    <url>/2020/07/16/Oracle%E8%AF%95%E9%A2%982/</url>
    
    <content type="html"><![CDATA[<ol><li><p>查询部门30中的所有员工信息<br><code>select * from emp where deptno = 30</code></p></li><li><p>列出所有办事员(CLERK)的姓名,编号和部门编号<br><code>select ename,empno,deptno from emp where job = &#39;CLERK&#39;</code></p></li><li><p>找出奖金高于薪金的员工信息<br><code>select * from emp where comm &gt; sal</code></p></li><li><p>找出奖金高于薪金的60%的员工信息<br><code>select * from emp where comm &gt; (sal * 0.6)</code></p></li><li><p>找出部门10中所有经理(MANAGER)和部门20中所有办事员(CLERK)的详细资料<br><code>select * from emp where job = &#39;MANAGER&#39; and deptno = 10 or job = &#39;CLERK&#39; and deptno = 20</code></p></li><li><p>找出部门10中所有经理(MANAGER),部门20中的所有办事员(CLERK), 既不是经理又不是办事员但薪金大于或等于2000的所有员工的详细资料<br><code>select * from emp where (job = &#39;MANAGER&#39; and deptno = 10) or (job = &#39;CLERK&#39; and deptno = 20) or (job != &#39;MANAGER&#39; and job != &#39;CLERK&#39; and sal &gt;=2000)</code></p></li><li><p>找出员工可以获取到奖金的工作<br><code>select distinct job from emp where nvl(comm,0)&gt;0</code></p></li><li><p>找出不收取或收取奖金低于100的员工信息<br><code>select * from emp where nvl(comm,0)&lt;100</code></p></li><li><p>找出各月倒数第3天受雇的所有员工信息<br><code>select * from emp where last_day(hiredate)-hiredate=2;</code></p></li><li><p>找出早于12年前受雇的员工信息<br><code>select * from emp where to_number(to_char(sysdate,&#39;yyyy&#39;)) - to_number(to_char(hiredate,&#39;yyyy&#39;)) &gt; 12</code></p></li><li><p>以首字母大写的方式显示所有员工的姓名<br><code>select initcap(ename) from emp</code></p></li><li><p>显示正好为5个字符的员工的姓名<br><code>select ename from emp where ename like &#39;_____&#39;</code><br>或<br><code>select ename from emp where length(ename) = 5</code></p></li><li><p>显示不带有”R”的员工的姓名<br><code>select ename from emp where instr(ename,&#39;R&#39;) = 0</code></p></li><li><p>显示所有员工的姓名的前三个字符<br><code>select substr(ename,0,3) from emp</code></p></li><li><p>显示所有员工的姓名,用”a”代替所有的”A”<br><code>select replace(ename,&#39;A&#39;,&#39;a&#39;) from emp;</code></p></li><li><p>显示满10年服务年限的员工的姓名和受雇日期<br><code>select ename,hiredate from emp where to_number(to_char(sysdate,&#39;yyyy&#39;)) - to_number(to_char(hiredate,&#39;yyyy&#39;)) &gt; 10</code></p></li><li><p>显示员工详细信息,按姓名排升序<br><code>select * from emp order by ename</code></p></li><li><p>显示员工的姓名和受雇日期,根据其服务年限,将最老的员工排在前面<br><code>select ename,hiredate from emp order by hiredate</code></p></li><li><p>显示所有员工的姓名,工作和薪金,按工作的降序排序,若工作相同则薪金升序排序<br><code>select ename,job,sal from emp order by job desc,sal</code></p></li><li><p>示所有员工的姓名,加入公司的年份和月份,按受雇日期所在月排序,若月份相同则将最早年份的员工排在前面（要求使用extract函数）<br><code>select ename,extract (year from hiredate),extract (month from hiredate) from emp order by extract (month from hiredate),extract (year from hiredate)</code></p></li><li><p>显示在一个月为30天的情况,所有员工的名字和日薪金,忽略余数<br><code>select ename,trunc((sal/30)) from emp;</code></p></li><li><p>找出在(任何年份的)2月受雇的所有员工信息<br><code>select * from emp where extract(month from hiredate)=2</code></p></li><li><p>对于每个员工,显示名字和其加入公司的天数,保留2位小数(四舍五入)<br><code>select ename,round(sysdate-hiredate,2) from emp;</code></p></li><li><p>显示姓名字段的任何位置包含”A”的所有员工的姓名<br><code>select ename from emp where instr(ename,&#39;A&#39;) &gt; 0</code></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Oracle</tag>
      
      <tag>试题</tag>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Oracle体系结构</title>
    <link href="/2020/07/15/Oracle%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
    <url>/2020/07/15/Oracle%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<ol><li><p>系统全局共享区（SGA）<br> 共享内存区域</p></li><li><p>个人用户私有全局区（PGA）</p></li><li><p>SQL语句缓冲（Library Cache）**查</p></li><li><p>数据字典缓冲区（Data Dictionary Cache）**查</p></li><li><p>块缓冲区高速缓存（Database Buffer Cache）**增删改</p></li><li><p>重做日志缓冲区</p></li></ol><p>创建用户<br>create user xxx identified by xxx<br>授予权限<br>grant xxx(dba,resource,connect) to xxx<br>收回权限<br>revoke xxx from xxx</p><p>SQL语句运行顺序<br>select        5<br>from        1<br>where        2<br>group by    3<br>having        4<br>order by    6</p><p>insert into table(…) value(…)</p><p>时间表达式</p><p>Oracle:YYYY-MM-DD HH24:MI:SS<br>PG:YYYY-MM-DD HH24:MI:SS<br>MySQL:%Y-%M-%D</p><p>nvl()<br>nvl2()<br>decode()</p><p>chr(65) = A<br>concat(str1,str2,str3,…)<br>initcap()</p><p>to_char()<br>to_number()</p><p>ABS<br>CEIL<br>FLOOR<br>POWER<br>ROUND</p><p>日期、字符串、数字转换<br>日期——》  to_number(to_char(date,’yyyymmdd’))</p><p>nullif(A,B)<br>    A和B相同返回null，否则返回A</p><p>coalesce(…,…,…)<br>返回第一个非空值</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Oracle</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Spring事务传播方式</title>
    <link href="/2020/07/02/Spring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E6%96%B9%E5%BC%8F/"/>
    <url>/2020/07/02/Spring%E4%BA%8B%E5%8A%A1%E4%BC%A0%E6%92%AD%E6%96%B9%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h3 id="事务的基本要素"><a href="#事务的基本要素" class="headerlink" title="事务的基本要素"></a>事务的基本要素</h3><ol><li><p>原子性（Atomicity）：事务开始后所有操作，要么全部做完，要么全部不做，不可能停滞在中间环节。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体，就像化学中学过的原子，是物质构成的基本单位。</p></li><li><p>一致性（Consistency）：事务开始前和结束后，数据库的完整性约束没有被破坏 。比如A向B转账，不可能A扣了钱，B却没收到。</p></li><li><p>隔离性（Isolation）：同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账。</p></li><li><p>持久性（Durability）：事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。</p></li></ol><h3 id="事务的并发问题"><a href="#事务的并发问题" class="headerlink" title="事务的并发问题"></a>事务的并发问题</h3><ol><li><p>脏读：事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据。</p></li><li><p>不可重复读：事务A多次读取同一数据，事务B在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果不一致。</p></li><li><p>幻读：事务A在修改一组数据时，事务B新增了一条数据，事务A在确认修改完后发现还有一条数据居然没有修改成功，跟见了鬼一样。</p></li></ol><p><strong>不可重复读的和幻读很容易混淆，不可重复读侧重于修改，幻读侧重于新增或删除。</strong></p><h3 id="Spring事务作用"><a href="#Spring事务作用" class="headerlink" title="Spring事务作用"></a>Spring事务作用</h3><p><strong>当我们调用一个基于Spring的Service接口方法时，它将运行于Spring管理的事务环境中，Service接口方法可能会在内部调用其它的Service接口方法以共同完成一个完整的业务操作，因此就会产生服务接口方法嵌套调用的情况， Spring通过事务传播行为控制当前的事务如何传播到被嵌套调用的目标服务接口方法中。</strong></p><h3 id="Spring的事务隔离级别"><a href="#Spring的事务隔离级别" class="headerlink" title="Spring的事务隔离级别"></a>Spring的事务隔离级别</h3><ol><li>ISOLATION_DEFAULT 默认级别<ul><li>由底层数据库决定事务隔离级别。</li></ul></li><li>ISOLATION_READ_UNCOMMITED 读未提交 <ul><li>会产生脏读，不可重复读，幻读。</li></ul></li><li>ISOLATION_COMMITED 读已提交 <ul><li>可以避免产生脏读。但还是会产生不可重复读，幻读。</li></ul></li><li>ISOLATION_REPEATABLE_READ 可重复读 <ul><li>可以避免产生脏读，不可重复读。但还是会产生幻读。</li></ul></li><li>ISOLATION_SERIALIZABLE 串行化 <ul><li>完全避免了脏读，不可重复读，幻读。</li></ul></li></ol><h3 id="Spring事务传播行为"><a href="#Spring事务传播行为" class="headerlink" title="Spring事务传播行为"></a>Spring事务传播行为</h3><ol><li>PROPAGATION_REQUIRED<ul><li>如果当前没有事务，就新建一个事务，如果已经存在一个事务中，加入到这个事务中。这是最常见的选择。</li></ul></li><li>PROPAGATION_SUPPORTS<ul><li>支持当前事务，如果当前没有事务，就以非事务方式执行。</li></ul></li><li>PROPAGATION_MANDATORY<ul><li>使用当前的事务，如果当前没有事务，就抛出异常。</li></ul></li><li>PROPAGATION_REQUIRES_NEW<ul><li>新建事务，如果当前存在事务，把当前事务挂起。</li></ul></li><li>PROPAGATION_NOT_SUPPORTED<ul><li>以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</li></ul></li><li>PROPAGATION_NEVER<ul><li>以非事务方式执行，如果当前存在事务，则抛出异常。</li></ul></li><li>PROPAGATION_NESTED<ul><li>如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。</li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Spring</tag>
      
      <tag>事务传播</tag>
      
      <tag>事务隔离级别</tag>
      
      <tag>事务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>视察中国联合工程公司的讲话</title>
    <link href="/2019/04/12/%E8%A7%86%E5%AF%9F%E4%B8%AD%E5%9B%BD%E8%81%94%E5%90%88%E5%B7%A5%E7%A8%8B%E5%85%AC%E5%8F%B8%E7%9A%84%E8%AE%B2%E8%AF%9D/"/>
    <url>/2019/04/12/%E8%A7%86%E5%AF%9F%E4%B8%AD%E5%9B%BD%E8%81%94%E5%90%88%E5%B7%A5%E7%A8%8B%E5%85%AC%E5%8F%B8%E7%9A%84%E8%AE%B2%E8%AF%9D/</url>
    
    <content type="html"><![CDATA[<p>“到了北京我干了这十几年也没什么别的，大概三件事<br>一个，确立了社会主义市场经济<br>第二个，把邓小平理论列入党章<br>第三个，就是“三个代表”<br>如果说还有一点成绩就是军队一律不得经商<br>这个对军队的命运有很大的关系<br>……<br>还有98年抗洪也是很大的。”</p><p>——2009年，视察中国联合工程公司的讲话。</p><p>以上这段著名的讲话，不少动保人士可以逐字背诵。但其中深意，仍然值得玩味。</p><p>他主政年间，中国经济社会剧烈变化，落霞与孤鹜齐飞，机遇与挑战并存。然而到了晚年，他心心念之的，居然是这五件事情。前三件不用多说，都是关乎江山社稷、党国命运的大事；军队改革的重要性也不展开讲了，如果相关政策执行彻底，今日也不会发生魏则西事件。<br>在这五件事中，唯有1998年抗洪，是一起独立的事件，一场转瞬的自然灾害，一段难言政绩的过往。这场肆虐的洪水中，发生了哪些惊心动魄的故事？作为国家主席，他在当时有哪些作为？在长江流域又面临严重洪灾威胁的今年，98年抗洪有什么启示意义？</p><p>带着这些问题，让我们一起钻进那段波澜壮阔的历史画卷。</p><div align=center><img src ="https://s1.ax1x.com/2020/06/02/tt4K0O.png"/></div><h2 id="全流域特大洪水"><a href="#全流域特大洪水" class="headerlink" title="全流域特大洪水"></a>全流域特大洪水</h2><p>1998年的洪灾，是近半个多世纪以来中国最严重的全流域特大洪水。长江水利委员会事后得出的结论为“其汛期之早、洪水来势之猛、洪峰水位之高、防洪战线之长、高水位持续时间之久均为历史之最”。</p><p>根据救灾工作结束后的“不完全统计”，98年洪灾共造成农田成灾2.07亿亩（大概占全国耕地面积的九分之一），死亡4150人，倒塌房屋685万间，直接经济损失2551亿元。</p><p>这一年，全国范围内出现气候异常。汛期来临前的4月，时任国务院副总理、全国防汛抗旱总指挥的温宝宝主持防总会议时就判断，汛期可能发生50年一遇以上的大洪水。然而，当时没有判断出的是，在接下来的几个月里，多条大江大河出现历史极值流量或最高水位，长江接连出现8次洪峰。</p><p>8月1日，湖北嘉鱼县簰洲湾长江大堤溃口，这是长江防线第一次失守。溃口当天44人罹难，80平方公里土地成为一片湖泊，举国震动。</p><div align=center><img src ="https://s1.ax1x.com/2020/06/02/tt4mX6.png"/></div><center><font size="2">（98年抗洪现场照片，新华社发）</font></center><p>8月7日，长江九江大堤发生决口，九江市被淹。这是98抗洪史上最让人不愿回忆的一天，遇难的群众、牺牲的官兵数量不可考。8月8日，时任总理朱镕基赶到决堤现场，愤怒地做出了“这是豆腐渣工程、王八蛋工程”的著名论断，可见情况之严重。最终通过耗时4天、反复争夺，主动沉船10艘、耗钢80万吨，才初步封堵住九江决口。</p><p>在这次全流域的洪水中，我们也不能忘记其他大江河的严峻形势——6月，闽江干流水电站最大入库流量3.7万立方米/秒，为20世纪最大流量；松花江干流哈尔滨段，在8月22日水位达到120.89米，超过前历史最高水位将近1米，肆虐的洪水甚至淹没了屹立在哈尔滨市中央大街北端、1957年修建的防洪胜利纪念塔塔基。</p><h2 id="最声嘶力竭的一次讲话"><a href="#最声嘶力竭的一次讲话" class="headerlink" title="最声嘶力竭的一次讲话"></a>最声嘶力竭的一次讲话</h2><p>梳理90年代中国的大小政事，两院界限还算分明，“主席主国事，总理理内政”的权责划分还相对明显。98抗洪大战打响后，朱镕基、温宝宝多次前往各个流域视察，并作为主要负责人部署防汛抗洪工作。<br>然而，随着洪峰一次次来袭，形势愈发难以控制。7月22日，湖北武汉市降特大暴雨，创该市雨量新纪录。武汉长江大堤外水位超过警戒线，远远高于武汉地面，武汉成为了一座“头顶水缸”的城市。</p><div align=center><img src ="https://s1.ax1x.com/2020/06/02/tt4unK.png"/></div><center><font size="2">（98年8月初，长江水位已明显高于武汉市陆地。图片来源于长江日报）</font></center><p>当天傍晚，他打电话给温宝宝，要求沿长江各省市特别是武汉市作好迎战洪峰的准备，抓紧加固堤防，排除内涝，严防死守，做到三个确保：确保长江大堤安全，确保武汉等重要城市安全，确保人民生命财产安全。</p><p>他的这次表态，成为了当年长江流域抗洪的核心指导思想。特别是第二条，多年来在坊间备受议论、众说纷纭，“牺牲XX保武汉”成为98抗洪的碎语杂音。</p><p>但无论如何，“抓大放小”可能是主政者不得不做出的选择。“死守荆州、力保武汉”成为了一场漫长而惊心动魄的拉锯战。</p><p>从8月6日起，荆江段就超过了国务院“钦定”的分洪水位线（文件就这么写的！），如果炸开大堤泄洪，荆州数百平方公里的土地将直接变成一片汪洋；如果不泄洪，武汉等大城市又时刻面临决口的风险。</p><p>面对巨大的压力，湖北省主要领导向中央申请炸堤泄洪。据史料记载，温宝宝亲口表示：“我临来时，总书记交代，能不能考虑再看一下，坚持一下，慎重决策，坚守大堤……解放军官兵全部上堤奋战两天，迎战洪峰。地方能否也下决心，让群众全部上堤，奋战两天，死守大堤。”</p><p>我们无法得知他在做出这个决定时的心理活动。但从他心心念之的五件事来看，这可能是他职业生涯中最艰难的抉择之一——如果判断错误，武汉决口，堤坝上的数万官兵群众、武汉市的百万市民尽墨，千秋功罪将难以洗刷。</p><p>8月13日至14日，他到长江荆江大堤、洪湖大堤、武汉龙王庙、月亮湾等险段指挥抢险，慰问军民，发表了可能是他平生最激动的一次讲话。他身着标志性的服装，举着喇叭，在大堤上声嘶力竭地喊出：“我们要坚决地坚持到底，坚持奋战，坚持再坚持！我们就一定能够取得最后的胜利。”多少有些语无伦次的四句话，说出了五个“坚”字，可见内心背负了多大的压力。</p><p>9月2日，长江洪峰终于减弱，荆江大堤在数以十万计的官民死守下，保住了。</p><p>此后，他在九江、在北京的总结表彰会上，也针对抗洪发表了系列重要讲话。但无论哪次讲话，都没有这次坝上一般的慷慨动容。</p><p>今晚我来到武汉长江边，江水看似平静却不知道埋葬了多少过往。根据媒体报道，今年汉口水位超过98年同期最高纪录。面对新一轮的洪灾威胁，不知道身在北方静静修养的他，是否还会想起自己18年前那大幅挥舞的臂膀。</p>]]></content>
    
    
    <categories>
      
      <category>闲言碎语</category>
      
    </categories>
    
    
    <tags>
      
      <tag>武汉</tag>
      
      <tag>98年</tag>
      
      <tag>抗洪</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
